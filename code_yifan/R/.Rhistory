cv_n = 5
cv_df = tibble(index = c(1:cv_n))
set.seed(615)
cv_index = sample_n(cv_df, nrow(data_df), replace = T)
pred_all = rep(0, nrow(data_df))
my_sh_all = matrix(0, cv_n ,4)
for(ii in 1:cv_n){
t1 = Sys.time()
split <- which(cv_index$index != ii)
train <- data_df[split,]
test <- data_df[-split,]
tidy_train <- train %>%
unnest_tokens(word, text)
tidy_train2 <- tidy_train %>%
distinct(line, stars, word)
tidy_test <- test %>%
unnest_tokens(word, text)
tidy_test2 <- tidy_test %>%
distinct(line, stars, word)
major <- tidy_train2 %>%
group_by(word) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
filter(count > n_sh)
tidy_train3 <- tidy_train2 %>%
inner_join(major, by = "word")
tidy_test3 <- tidy_test2 %>%
inner_join(major, by = "word")
tidy_train_count <- tidy_train3 %>%
group_by(stars) %>%
summarise(n = n())
tidy_var = tidy_train3 %>%
group_by(word, stars) %>%
summarise(count = n()) %>%
spread(stars, count, fill = 0)
myvar_test = apply(tidy_var, 1, myvar, counts = tidy_train_count$n)
# myexp_test = apply(tidy_var, 1, myexp, counts = tidy_all_count$n)
word_var <- data_frame(word = tidy_var$word,
var = myvar_test) %>%
arrange(desc(var))
k = sum(word_var$var>var_sh)
major_word <- word_var %>%
filter(var>var_sh) %>%
select(word)
tidy_train4 <- tidy_train3 %>%
select(line, stars, word) %>%
inner_join(major_word, by = "word") %>%
mutate(mycount = 1)
tidy_test4 <- tidy_test3 %>%
select(line, stars, word) %>%
inner_join(major_word, by = "word") %>%
mutate(mycount = 1)
xx <- tidy_train4 %>%
group_by(line) %>%
summarise(kkk = 0)
w = which(!train$line   %in% xx$line)
ww = train$line[w]
star_mode = round(mean(train$stars))
my_tidy = tibble(
line = ww,
stars = star_mode,
word = "myWord",
mycount = 1
)
tidy_train5 <- bind_rows(tidy_train4, my_tidy) %>%
arrange(line)
xx <- tidy_test4 %>%
group_by(line) %>%
summarise(kkk = 0)
w = which(!test$line   %in% xx$line)
ww = test$line[w]
my_tidy = tibble(
line = ww,
stars = star_mode,
word = "myWord",
mycount = 1
)
tidy_test5 <- bind_rows(tidy_test4, my_tidy) %>%
arrange(line)
col_name = unique(tidy_train5$word)
col_name2 = c(col_name, "STAR")
train_matrix <- tidy_train5 %>%
cast_sparse(line, word, mycount)
stars = train$stars
train_matrix2 = cbind(train_matrix, stars)
train_df = as.data.frame(as.matrix(train_matrix2))
colnames(train_df) = col_name2
test_matrix <- tidy_test5 %>%
cast_sparse(line, word, mycount)
test_matrix2 = test_matrix
test_df = as.data.frame(as.matrix(test_matrix2))
colnames(test_df) = col_name[1:ncol(test_df)]
f <- as.formula(paste("STAR ~", paste(sprintf("`%s`", col_name[1:(length(col_name)-1)]), #
collapse = " + ")))
fit = neuralnet(formula = f, data = train_df, hidden=c(5,3)) # , hidden=c(5,3)
pred = neuralnet::compute(fit, test_df[1:(length(col_name)-1)])
pred_all[-split] = pred$net.result
mymse = function(sh, preds, true_value){
pred_new = rep(0, length(pred))
pred_new[which(preds<sh[1])] = 1
pred_new[which(preds>=sh[1] & preds<sh[2])] = 2
pred_new[which(preds>=sh[2] & preds<sh[3])] = 3
pred_new[which(preds>=sh[3] & preds<sh[4])] = 4
pred_new[which(preds>=sh[4])] = 5
MSE = sum((pred_new-true_value)^2)/length(pred_new)
return(MSE)
}
my_sh2 = optim(c(1.5,2.5,3.5,4.5),mymse, preds = pred$net.result, true_value = test$stars)
my_sh3 = my_sh2$par
my_sh_all[ii,] = my_sh3
t2 = Sys.time()
print(paste(as.character(ii), ": ", (t2 - t1)), sep = "")
}
library(tidyverse)
library(tidytext)
library(Matrix)
library(topicmodels)
library(glmnet)
data_ori = read_csv("/Users/Lyf/Desktop/train_cnn10w.csv")
library(tidyverse)
library(tidytext)
library(Matrix)
library(topicmodels)
library(glmnet)
feature = read_csv("/Users/Lyf/Github/Stat_628_2/data/feature3_all.csv")
data_df = data_frame(line = 1:nrow(data_ori),
text = data_ori$text,
stars = data_ori$stars)
tidy_all <- data_df %>%
unnest_tokens(word, text)
feature
myfeature <- feature %>%
select(word)
tidy_all2 <- tidy_all %>%
inner_join(myfeature, by = "word")
dim(tidy_all)
dim(tidy_all2)
tidy_all3 <- tidy_all2 %>%
group_by(line) %>%
summarise(text = paste(word))
tidy_all3 <- tidy_all2 %>%
group_by(line) %>%
summarise(text = paste(word, collapse=""))
tidy_all3 <- tidy_all2 %>%
group_by(line) %>%
summarise(text = paste(word, collapse=" "))
final_data = data_ori
tidy_all3
final_data <- final_data %>%
inner_join(tidy_all3, by = "line")
final_data
tidy_all3
final_data$line = c(1:nrow(final_data))
final_data <- final_data %>%
inner_join(tidy_all3, by = "line")
dim(data_ori)
dim(final_data)
final_data
final_data = data_ori %>%
select(-text)
final_data$line = c(1:nrow(final_data))
final_data <- final_data %>%
inner_join(tidy_all3, by = "line")
final_data
final_data$text[1]
write_csv(final_data, "/Users/Lyf/Desktop/train_cnn10w2.csv")
data_ori = read_csv("/Users/Lyf/Desktop/train_cnn10w.csv")
library(tidyverse)
library(tidytext)
library(Matrix)
library(topicmodels)
library(glmnet)
data_ori = read_csv("/Users/Lyf/Desktop/train_cnn10w.csv")
feature = read_csv("/Users/Lyf/Github/Stat_628_2/data/feature3_all.csv")
nrow(feature)
data_df = data_frame(line = 1:nrow(data_ori),
text = data_ori$text,
stars = data_ori$stars)
data_df2 <- data_df %>%
group_by(line) %>%
summarise(count = n())
data_df2
myfeature <- feature %>%
select(word)
tidy_all <- data_df %>%
unnest_tokens(word, text)
tidy_all2 <- tidy_all %>%
inner_join(myfeature, by = "word")
tidy_all_sp <- tidy_all2 %>%
group_by(line) %>%
summarise(count = n())
tidy_all_sp
hist(tidy_all_sp$count)
feature = read_csv("/Users/Lyf/Github/Stat_628_2/data/feature3_all.csv")
library(tidyverse)
library(tidytext)
library(Matrix)
library(topicmodels)
library(glmnet)
feature = read_csv("/Users/Lyf/Github/Stat_628_2/data/feature3_all.csv")
feature[5000,]
sum(feature$var>0.01)
data_ori = read_csv("/Users/Lyf/Desktop/train_cnn10w.csv")
data_df = data_frame(line = 1:nrow(data_ori),
text = data_ori$text,
stars = data_ori$stars)
n1 = length(data_df$line)
tidy_all <- data_df %>%
unnest_tokens(word, text)
myfeature2
myfeature2 = myfeature[1:5000,]
myfeature <- feature %>%
select(word)
myfeature2 = myfeature[1:5000,]
myfeature2
tidy_all2 <- tidy_all %>%
inner_join(myfeature2, by = "word")
tidy_all3 <- tidy_all2 %>%
group_by(line) %>%
summarise(text = paste(word, collapse=" "))
final_data = data_ori %>%
select(-text)
final_data$line = c(1:nrow(final_data))
final_data <- final_data %>%
inner_join(tidy_all3, by = "line")
write_csv(final_data, "/Users/Lyf/Desktop/train_cnn10w2.csv")
final_data
final_data$text
final_data$text[1]
final_data$text[2]
data_ori = read_csv("/Users/Lyf/Desktop/cnn_test.csv")
data_ori
data_ori$text[1]
data_ori$text[2]
data_ori$text[3]
data_ori$text[4]
data_ori$text[5]
library(tidyverse)
library(tidytext)
library(Matrix)
library(topicmodels)
library(glmnet)
data_ori = read_csv("../../data/random100000w.csv")
data_df = data_frame(line = 1:nrow(data_ori),
text = data_ori$text,
stars = data_ori$stars)
data_df
data_tidy <- data_df %>%
unnest_tokens(word, text)
data_tidy
data_tidy2 <- data_tidy %>%
group_by(stars, word) %>%
spread(stars)
data_tidy2 <- data_tidy %>%
group_by(stars, word) %>%
summarise(count = 1)
data_tidy2
data_tidy
data_tidy2 <- data_tidy %>%
distinct(line, word)
dim(data_tidy)
dim(data_tidy2)
data_tidy2 <- data_tidy %>%
distinct(line, word) %>%
group_by(stars, word) %>%
summarise(count = 1)
data_tidy2 <- data_tidy %>%
distinct(line, word)
data_tidy2
data_tidy
data_tidy2 <- data_tidy %>%
distinct(line, word, stars) %>%
group_by(stars, word) %>%
summarise(count = 1)
data_tidy2
data_tidy3 <- data_tidy2 %>%
spread(stars)
data_tidy3 <- data_tidy2 %>%
group_by(word) %>%
spread(stars)
?spread
data_tidy3 <- data_tidy2 %>%
spread(word, stars)
data_tidy3
data_tidy3 <- data_tidy2 %>%
spread(word, stars, fill = 0)
data_tidy2
data_tidy3
data_tidy3 <- data_tidy2 %>%
group_by(word) %>%
spread(word, stars, fill = 0)
data_tidy2 <- data_tidy %>%
distinct(line, word, stars) %>%
group_by(stars, word) %>%
summarise(count = n())
data_tidy2
max(data_tidy2$count)
data_tidy3 <- data_tidy2 %>%
spread(stars, count, fill = 0)
data_tidy3
data_df
star_count <- data_df %>%
group_by(stars) %>%
summarise(count = n())
star_count
mycount = star_count$count
data_tidy3
data_row = data_tidy3[1,]
data2 = as.numeric(data_row[2:6])
i=
1
x1 = data2[i]
x2 = data2[-i]
x1
x2
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
y1 = data2[i]/count[i]
y2 = data2[-i]/sum(count[-i])
}
return(y1/y2)
}
myprop(data_row, mycount)
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
y1 = data2[i]/counts[i]
y2 = data2[-i]/sum(counts[-i])
}
return(y1/y2)
}
myprop(data_row, mycount)
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
y1 = data2[i]/counts[i]
y2 = sum(data2[-i])/sum(counts[-i])
}
return(y1/y2)
}
myprop(data_row, mycount)
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
y1 = data2[i]/counts[i]
y2 = sum(data2[-i])/sum(counts[-i])
xx[i] = y1/y2
}
return(xx)
}
myprop(data_row, mycount)
data_tidy3
result = data_frame(0, nrow(data_tidy3), 5)
result
?data_frame
result = tibble(
'1' = rep(0, nrow(data_tidy3)),
'2' = rep(0, nrow(data_tidy3)),
'3' = rep(0, nrow(data_tidy3)),
'4' = rep(0, nrow(data_tidy3)),
'5' = rep(0, nrow(data_tidy3))
)
result
result = apply(data_tidy3, 1, myprop, counts = mycount)
result
result[1]
dim(result)
result = apply(data_tidy3[1:2,], 1, myprop, counts = mycount)
result
result = apply(data_tidy3[1:2,], 2, myprop, counts = mycount)
result = apply(data_tidy3[1:2,], 1, myprop, counts = mycount)
result
myprop(data_row, mycount)
class(result)
result = t(apply(data_tidy3[1:2,], 1, myprop, counts = mycount))
result
result = as.tibble(t(apply(data_tidy3[1:2,], 1, myprop, counts = mycount)))
result
result = as.tibble(t(apply(data_tidy3, 1, myprop, counts = mycount)))
result$word = data_tidy3$word
result
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
if(counts[i] == 0){
xx[i] = 0
}else if(sum(data2[-i])){
xx[i] = 100
}else if(sum(counts[-i])){
xx[i] = 100
}else{
y1 = data2[i]/counts[i]
y2 = sum(data2[-i])/sum(counts[-i])
xx[i] = y1/y2
}
}
return(xx)
}
result = as.tibble(t(apply(data_tidy3, 1, myprop, counts = mycount)))
result$word = data_tidy3$word
result
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
if(counts[i] == 0){
xx[i] = 0
}else if(sum(data2[-i]) == 0){
xx[i] = 100
}else if(sum(counts[-i]) == 0){
xx[i] = 100
}else{
y1 = data2[i]/counts[i]
y2 = sum(data2[-i])/sum(counts[-i])
xx[i] = y1/y2
}
}
return(xx)
}
result = as.tibble(t(apply(data_tidy3, 1, myprop, counts = mycount)))
result$word = data_tidy3$word
result
data_tidy2
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = n()) %>%
filter(count2_5 > 50) %>%
ungroup()
data_tidy2_5
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = n())
data_tidy2_5
data_tidy2_5 <- data_tidy %>%
group_by(word) %>%
summarise(count2_5 = n())
data_tidy2_5
data_tidy2 <- data_tidy %>%
distinct(line, word, stars) %>%
group_by(stars, word) %>%
summarise(count = n())
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = n())
data_tidy2_5
data_tidy2
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = sum(count))
data_tidy2_5
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = sum(count)) %>%
filter(count2_5 > 50) %>%
ungroup()
data_tidy2_5
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = sum(count)) %>%
filter(count2_5 > 50) %>%
ungroup
data_tidy2_5
data_tidy2_5 <- data_tidy2 %>%
group_by(word) %>%
summarise(count2_5 = sum(count)) %>%
filter(count2_5 > 50)
major <- data_tidy2_5 %>%
select(word)
major
data_tidy3 <- data_tidy2 %>%
inner_join(major, by = "word") %>%
spread(stars, count, fill = 0)
dim(data_tidy2)
dim(data_tidy2)
dim(data_tidy3)
data_tidy3
star_count <- data_df %>%
group_by(stars) %>%
summarise(count = n())
mycount = star_count$count
myprop = function(data_row, counts){
data2 = as.numeric(data_row[2:6])
xx = numeric(5)
for(i in 1:5){
if(counts[i] == 0){
xx[i] = 0
}else if(sum(data2[-i]) == 0){
xx[i] = 100
}else if(sum(counts[-i]) == 0){
xx[i] = 100
}else{
y1 = data2[i]/counts[i]
y2 = sum(data2[-i])/sum(counts[-i])
xx[i] = y1/y2
}
}
return(xx)
}
result = as.tibble(t(apply(data_tidy3, 1, myprop, counts = mycount)))
result$word = data_tidy3$word
result
result <- result %>%
select(word, V1:V5)
result
filename = paste("../../data/feature4jianmin.cav")
write_csv(result, filename)
